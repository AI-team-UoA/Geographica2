/*
 *
 *  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 *  project.
 *
 *  Copyright (C) 1998-2016 OpenLink Software
 *
 *  This project is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as published by the
 *  Free Software Foundation; only version 2 of the License, dated June 1991.
 *
 *  This program is distributed in the hope that it will be useful, but
 *  WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, write to the Free Software Foundation, Inc.,
 *  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}


jar {
  baseName = 'virt_rdf4j'
//  version = '0.1.0'
  manifest {
    attributes(
      'Main-Class': 'virtuoso.rdf4j.driver.Version'
    )
  }
}


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.18'
    compile 'org.eclipse.rdf4j:rdf4j-runtime:2.1.4'

    compile files('lib/virtjdbc4_2.jar')

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'

}

test {
    systemProperty 'test_hostname', 'localhost'
    systemProperty 'test_port', '1111'
    systemProperty 'test_uid', 'dba'
    systemProperty 'test_pwd', 'dba'

    testLogging.showStandardStreams = true
    afterTest { desc, result -> 
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

task copyLibs {
   doLast{  
      println('------COPY JARS----------')
      copy {
        from './build/libs'
        into './'
      }
   }
}

task copyDocs {
   doLast{  
      println('------COPY DOCS----------')
      copy {
        from './build/docs/javadoc'
        into './doc/'
      }
   }
}

assemble.finalizedBy copyLibs
javadoc.finalizedBy  copyDocs
